{"version":3,"sources":["../../../../server/api/user/user.integration.js"],"names":[],"mappings":"AAAA;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,SAAS,WAAT,EAAsB,YAAW;AAC7B,QAAI,IAAJ;;;AAD6B,UAI7B,CAAO,YAAW;AACd,eAAO,eAAK,MAAL,GAAc,IAAd,CAAmB,YAAW;AACjC,mBAAO,mBAAS;AACZ,sBAAM,WAAN;AACA,uBAAO,kBAAP;AACA,0BAAU,UAAV;aAHG,CAAP,CADiC;;AAOjC,mBAAO,KAAK,IAAL,EAAP,CAPiC;SAAX,CAA1B,CADc;KAAX,CAAP;;;AAJ6B,SAiB7B,CAAM,YAAW;AACb,eAAO,eAAK,MAAL,EAAP,CADa;KAAX,CAAN,CAjB6B;;AAqB7B,aAAS,mBAAT,EAA8B,YAAW;AACrC,YAAI,KAAJ,CADqC;;AAGrC,eAAO,UAAS,IAAT,EAAe;AAClB,iDACK,IADL,CACU,aADV,EAEK,IAFL,CAEU;AACF,uBAAO,kBAAP;AACA,0BAAU,UAAV;aAJR,EAMK,MANL,CAMY,GANZ,EAOK,MAPL,CAOY,cAPZ,EAO4B,MAP5B,EAQK,GARL,CAQS,UAAC,GAAD,EAAM,GAAN,EAAc;AACf,wBAAQ,IAAI,IAAJ,CAAS,KAAT,CADO;AAEf,uBAFe;aAAd,CART,CADkB;SAAf,CAAP,CAHqC;;AAkBrC,WAAG,uDAAH,EAA4D,UAAS,IAAT,EAAe;AACvE,iDACK,GADL,CACS,eADT,EAEK,GAFL,CAES,eAFT,EAE0B,YAAY,KAAZ,CAF1B,CAGK,MAHL,CAGY,GAHZ,EAIK,MAJL,CAIY,cAJZ,EAI4B,MAJ5B,EAKK,GALL,CAKS,UAAC,GAAD,EAAM,GAAN,EAAc;AACf,oBAAI,IAAJ,CAAS,GAAT,CAAa,QAAb,GAAwB,MAAxB,CAA+B,KAA/B,CAAqC,KAAK,GAAL,CAAS,QAAT,EAArC,EADe;AAEf,uBAFe;aAAd,CALT,CADuE;SAAf,CAA5D,CAlBqC;;AA8BrC,WAAG,kDAAH,EAAuD,UAAS,IAAT,EAAe;AAClE,iDACK,GADL,CACS,eADT,EAEK,MAFL,CAEY,GAFZ,EAGK,GAHL,CAGS,IAHT,EADkE;SAAf,CAAvD,CA9BqC;KAAX,CAA9B,CArB6B;CAAX,CAAtB","file":"user.integration.js","sourcesContent":["'use strict';\n\nimport app from '../..'\nimport User from './user.model'\nimport request from 'supertest'\n\ndescribe('User API:', function() {\n    var user\n\n    // Clear users before testing\n    before(function() {\n        return User.remove().then(function() {\n            user = new User({\n                name: 'Fake User',\n                email: 'test@example.com',\n                password: 'password'\n            })\n\n            return user.save()\n        })\n    })\n\n    // Clear users after testing\n    after(function() {\n        return User.remove()\n    })\n\n    describe('GET /api/users/me', function() {\n        var token\n\n        before(function(done) {\n            request(app)\n                .post('/auth/local')\n                .send({\n                    email: 'test@example.com',\n                    password: 'password'\n                })\n                .expect(200)\n                .expect('Content-Type', /json/)\n                .end((err, res) => {\n                    token = res.body.token\n                    done()\n                })\n        })\n\n        it('should respond with a user profile when authenticated', function(done) {\n            request(app)\n                .get('/api/users/me')\n                .set('authorization', 'Bearer ' + token)\n                .expect(200)\n                .expect('Content-Type', /json/)\n                .end((err, res) => {\n                    res.body._id.toString().should.equal(user._id.toString())\n                    done()\n                })\n        })\n\n        it('should respond with a 401 when not authenticated', function(done) {\n            request(app)\n                .get('/api/users/me')\n                .expect(401)\n                .end(done)\n        })\n    })\n})\n"]}